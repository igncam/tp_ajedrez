/*
-- Bolitas Verdes -- 
1 = Peones
2 = Caballos
3 = Alfiles
5 = Torres
10 = Reina
20 = Rey

1 Bolita negra 
1 azul = casillero balnco
1 roja = casillero negro
*/

// Biloteca utilizada https://github.com/igncam/blibloteca_gobstones

// Procedures 
procedure borrarPiezaAqui(){
    /*
    PROPOSITO: Saca la pieza de la celda actual.
    PRECONDICIONES: El cabezal debe estar situdo donde encuentra la pieza a sacar.
    OBSERVACIONES: El cabezal queda situado sobre la celda que contenia la pieza.
    */
    SacarTodasLasDeColor_(Negro)
    SacarTodasLasDeColor_(Verde)
}

procedure ColocarFicha_(cantidadDeBolitasAPoner) {
    /*
        PROPÓSITO: Colocar una pieza segun la *cantidadDeBolitasAPoner* en la celda actual. 
        PARÁMETROS:
            * cantidadDeBolitasAPoner: Numero - Numero de bolitas a poner.
        PRECONDICIONES:
            * No debe haber ninguna pieza en la celda actual.
        OBSERVACION: 
            cantidadDeBolitasAPoner 1 Peon
            cantidadDeBolitasAPoner 2 Caballos
            cantidadDeBolitasAPoner 3 Alfiles
            cantidadDeBolitasAPoner 5 Torres
            cantidadDeBolitasAPoner 10 Reina
            cantidadDeBolitasAPoner 20 Rey
    */  
    Poner_DeColor_(cantidadDeBolitasAPoner, Verde)
}

procedure MoverDiagonalAl_Y_(primeraDireccion, segundaDireccion){
    
    /*
    PROPOSITO: Mueve el cabezal hacia la celda en diagonal hacia *primeraDireccion*
    y *segundaDireccion*.
    PRECONDICIONES: 
         *Debe haber al menos una celda hacia *primeraDireccion*
         *Debe haber al menos una celda hacia *segundaDireccion*
         *primeraDireccion* y *segundaDireccion* no puede ser opuestas ni iguales.
    */
    
    Mover(primeraDireccion)
    Mover(segundaDireccion)
}


// EJERCICIO 01
procedure MoverPeonNegroUnaUbicacion() {
    /*
    PROPOSITO: Avanza el peón una posicion hacia adelante.
    PRECONDICIONES: * No debe haber otra pieza delante del peón.
      *El cabezal debe encontrarse sobre el peon en cuestion.
    OBSERVACIONES: El cabezal queda situado sobre el peón.
    */
    borrarPiezaAqui()
    Mover(Sur)
    ColocarFicha_(1)
    Poner(Negro)
}



// EJERCICIO 02
procedure ComerATorreBlancaAIzquierdaConPeon(){
    /*
    PROPOSITO: Comer la torre blanca que se encuentra en la diagonal izquierda del peón negro.
    PRECONDICIONES: *La torre blanca debe encontrarse en la diagonal izquierda lindante al peon negro.
        *El cabezal debe encontrarse sobre el peon en cuestion.
    OBSERVACIONES: El cabezal queda situado sobre el peón.
    */
    borrarPiezaAqui()
    MoverDiagonalAl_Y_(Sur,Oeste)
    borrarPiezaAqui()
    ColocarFicha_(1)
    Poner(Negro)
}

// EJERCICIO 03
procedure LlevarTorreBlancaHasta_Al_(cantidadAMover,direccionAMover){
    /*
    PROPOSITO: Mueve la torre blanca *cantidadAMover* veces  en la direccion *direccionAMover*.
    PRECONDICIONES: *El cabezal debe estar sobre la torre blanca a mover.
    El movimiento tiene que ser valido.
    PARÁMETROS:
        * cantidadAMover: Numero - Numero de movimientos a realizar.
        * direccionAMover: Dirreccion - Punto cardinal que indica hacia dónde se moverá.
    OBSERVACIONES:Al final del movimiento, el cabezal queda situada sobre la torre en cuestion.
    *En la ubicacion final de la torre no habra ninguna otra pieza.
    */
    borrarPiezaAqui()

    Mover_VecesAl_(cantidadAMover,direccionAMover)

    ColocarFicha_(5)
}



// EJERCICIO 05
/*
    Segun numeroAConvertir
    **  8 cifras
    **  De izquierda a derecha
    **  los primeros 4 = AÑO
    **  los siguientes 2 = MES
    **  los 2 ultimos  = DIA

    *Describe el año de nacimiento de una persona

    numeroAConvertir div 10000

    *Describe el mes de nacimiento de una persona

    (numeroAConvertir div 100) mod 100

    *Describe el dia de nacimiento de una persona

    numeroAConvertir mod 100

    * Nos indica si una persona es del milenio anterio
    numeroAConvertir < 2000
*/
